/// 1 = 0, 2 = 1,  3 = 1
/// 4 (2 -> 1) = 2
/// 5 (4 -> 2 -> 1) = 3
/// 6 (3 -> 1) = 2
/// 7 (6 -> 3 -> 1) = 3
/// 8 (4 -> 2 -> 1) = 2
/// 4 부터는 연산(-1, /2, /3) 후 나온 숫자의 최솟값이 존재
/// 첫 연산 후 나온 숫자의 최솟값 + 1
/// -1 연산과 나누기 연산 (2, 3으로 나눠진다면) 의 값 중 최솟값을 dp[i]에 저장

let N = Int(readLine()!)!
var dp = Array(repeating: 0, count: N + 1)

if N == 1 {
    print(0)
} else {
    for i in 2...N {
        dp[i] = dp[i - 1] + 1
        
        if i % 2 == 0 {
            dp[i] = min(dp[i/2] + 1, dp[i])
        }
        if i % 3 == 0 {
            dp[i] = min(dp[i/3] + 1, dp[i])
        }
    }
    
    print(dp[N])
}
